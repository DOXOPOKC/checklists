FROM alpine:3.10 AS build
ARG DEBUG
ENV PYTHONUNBUFFERED 1
RUN mkdir -p /app &&\
 apk add --no-cache python3 postgresql-libs jpeg zlib && \
 if [ ! -e /usr/bin/python ]; then ln -sf python3 /usr/bin/python ; fi && \
 apk add --no-cache --virtual .build-deps python3-dev gcc musl-dev postgresql-dev jpeg-dev zlib-dev && \
 pip3 install --disable-pip-version-check --no-cache-dir pipenv
WORKDIR /app
COPY Pipfile Pipfile.lock /app/

RUN if [[ "$DEBUG" == "TRUE" ]] || [[ "$DEBUG" == "True" ]] || [[ "$DEBUG" == "1" ]]; then \
  echo "Install with DEV packages"; \
  pipenv install --system --deploy --ignore-pipfile --dev; \
  pip3 uninstall pipenv virtualenv virtualenv-clone pip -y; \
 else \
  echo "Install only PROD packages"; \
  pip3 install --disable-pip-version-check --no-cache-dir gunicorn meinheld; \
  pipenv install --system --deploy --ignore-pipfile; \
  pip3 uninstall pipenv virtualenv virtualenv-clone certifi pip -y; \
 fi && \
 apk --purge del .build-deps  && \
 rm -rf /root/.cache /root/.local \
 /etc/apk/ /usr/share/apk/ /lib/apk/ /sbin/apk \
 /media /usr/lib/terminfo /usr/share/terminfo \
 /usr/lib/python*/ensurepip \
 /usr/lib/python*/turtledemo /usr/lib/python*/turtle.py /usr/lib/python*/__pycache__/turtle.* \
 /usr/bin/2to3* /usr/lib/python*/lib2to3 && \
 if [[ "$DEBUG" != "TRUE" ]] && [[ "$DEBUG" != "True" ]] && [[ "$DEBUG" != "1" ]]; then \
  find /usr/lib/python*/* | grep -E "(__pycache__|\.pyc|\.pyo$)" | xargs rm -rf; \
  python3 -m compileall -b /usr/lib/python*; \
  find /usr/lib/python*/* -name "*.py"|xargs rm -rf; \
 fi

RUN find /usr/lib/python*/site-packages/django/conf/locale ! -name __pycache__ ! -name __init__.py ! -name ru ! -name en -mindepth 1 -maxdepth 1  -type d -print0 | xargs -0 rm -rf
#RUN find /usr/lib/python*/site-packages/django/contrib/ ! -name ru ! -name en* -mindepth 3 -maxdepth 3 -type d -print0 | xargs -0 rm -rf
RUN find /usr/lib/python*/site-packages/rest_framework/ ! -name ru ! -name en* -mindepth 2 -maxdepth 2 -type d -print0 | xargs -0 rm -rf


FROM scratch AS deploy
ARG DEBUG
ENV PYTHONUNBUFFERED 1,
ENV DEBUG ${DEBUG}
EXPOSE 8000
COPY --from=build / /
WORKDIR /app
ENTRYPOINT ["./docker-entrypoint.sh"]
