version: '3.4'

services:
  backend:
    container_name: checklists_backend
    env_file: .env
    build:
      context: ./backend
      args:
        - DEBUG="${DEBUG}"
      target: deploy
    restart: on-failure
    volumes:
      - ./backend:/app
      - checklists_media:/app/media
      - ./static:/app/static
    depends_on:
      - postgres_db
    networks:
      private_network:
        ipv4_address: 172.25.0.5

  postgres_db:
    container_name: checklists_postgres_db
    env_file: .env
    image: postgres:11-alpine
    restart: on-failure
    command: -p ${POSTGRES_PORT}
    volumes:
      - checklists_db_data:/var/lib/postgresql/data
    networks:
      private_network:
        ipv4_address: 172.25.0.6

  nginx:
    container_name: checklists_nginx
    build:
      context: .
      dockerfile: nginx/Dockerfile
    restart: on-failure
    ports:
      - 80:80
    volumes:
      - ./nginx/prod.conf:/etc/nginx/nginx.conf:ro
      - ./static:/app/static
      - checklists_media:/app/media
    depends_on:
      - backend
    networks:
      private_network:
        ipv4_address: 172.25.0.7
      default:

#  postgres_backups:
#    container_name: checklists_postgres_backups
#    env_file: .env
#    image: prodrigestivill/postgres-backup-local:11-alpine
#    restart: always
#    links:
#      - postgres_db
#    depends_on:
#      - postgres_db
#    volumes:
#      - /tmp/backups/:/backups/
#    networks:
#      private_network:
#        ipv4_address: 172.25.0.9

networks:
  private_network:
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16


volumes:
  checklists_db_data:
    external:
      name: checklists_db_data
  checklists_media:
    external:
      name: checklists_media
